/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.muates.e.commerce.event.model.avro;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class ECommerceEventAvroModel extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 8494362280532505858L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"ECommerceEventAvroModel\",\"namespace\":\"com.muates.e.commerce.event.model.avro\",\"fields\":[{\"name\":\"eventId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"eventType\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"timestamp\",\"type\":\"long\"},{\"name\":\"productId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"productName\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"userId\",\"type\":\"long\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<ECommerceEventAvroModel> ENCODER =
      new BinaryMessageEncoder<ECommerceEventAvroModel>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<ECommerceEventAvroModel> DECODER =
      new BinaryMessageDecoder<ECommerceEventAvroModel>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<ECommerceEventAvroModel> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<ECommerceEventAvroModel> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<ECommerceEventAvroModel> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<ECommerceEventAvroModel>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this ECommerceEventAvroModel to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a ECommerceEventAvroModel from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a ECommerceEventAvroModel instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static ECommerceEventAvroModel fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

   private java.lang.String eventId;
   private java.lang.String eventType;
   private long timestamp;
   private java.lang.String productId;
   private java.lang.String productName;
   private long userId;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public ECommerceEventAvroModel() {}

  /**
   * All-args constructor.
   * @param eventId The new value for eventId
   * @param eventType The new value for eventType
   * @param timestamp The new value for timestamp
   * @param productId The new value for productId
   * @param productName The new value for productName
   * @param userId The new value for userId
   */
  public ECommerceEventAvroModel(java.lang.String eventId, java.lang.String eventType, java.lang.Long timestamp, java.lang.String productId, java.lang.String productName, java.lang.Long userId) {
    this.eventId = eventId;
    this.eventType = eventType;
    this.timestamp = timestamp;
    this.productId = productId;
    this.productName = productName;
    this.userId = userId;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return eventId;
    case 1: return eventType;
    case 2: return timestamp;
    case 3: return productId;
    case 4: return productName;
    case 5: return userId;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: eventId = value$ != null ? value$.toString() : null; break;
    case 1: eventType = value$ != null ? value$.toString() : null; break;
    case 2: timestamp = (java.lang.Long)value$; break;
    case 3: productId = value$ != null ? value$.toString() : null; break;
    case 4: productName = value$ != null ? value$.toString() : null; break;
    case 5: userId = (java.lang.Long)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'eventId' field.
   * @return The value of the 'eventId' field.
   */
  public java.lang.String getEventId() {
    return eventId;
  }


  /**
   * Sets the value of the 'eventId' field.
   * @param value the value to set.
   */
  public void setEventId(java.lang.String value) {
    this.eventId = value;
  }

  /**
   * Gets the value of the 'eventType' field.
   * @return The value of the 'eventType' field.
   */
  public java.lang.String getEventType() {
    return eventType;
  }


  /**
   * Sets the value of the 'eventType' field.
   * @param value the value to set.
   */
  public void setEventType(java.lang.String value) {
    this.eventType = value;
  }

  /**
   * Gets the value of the 'timestamp' field.
   * @return The value of the 'timestamp' field.
   */
  public long getTimestamp() {
    return timestamp;
  }


  /**
   * Sets the value of the 'timestamp' field.
   * @param value the value to set.
   */
  public void setTimestamp(long value) {
    this.timestamp = value;
  }

  /**
   * Gets the value of the 'productId' field.
   * @return The value of the 'productId' field.
   */
  public java.lang.String getProductId() {
    return productId;
  }


  /**
   * Sets the value of the 'productId' field.
   * @param value the value to set.
   */
  public void setProductId(java.lang.String value) {
    this.productId = value;
  }

  /**
   * Gets the value of the 'productName' field.
   * @return The value of the 'productName' field.
   */
  public java.lang.String getProductName() {
    return productName;
  }


  /**
   * Sets the value of the 'productName' field.
   * @param value the value to set.
   */
  public void setProductName(java.lang.String value) {
    this.productName = value;
  }

  /**
   * Gets the value of the 'userId' field.
   * @return The value of the 'userId' field.
   */
  public long getUserId() {
    return userId;
  }


  /**
   * Sets the value of the 'userId' field.
   * @param value the value to set.
   */
  public void setUserId(long value) {
    this.userId = value;
  }

  /**
   * Creates a new ECommerceEventAvroModel RecordBuilder.
   * @return A new ECommerceEventAvroModel RecordBuilder
   */
  public static com.muates.e.commerce.event.model.avro.ECommerceEventAvroModel.Builder newBuilder() {
    return new com.muates.e.commerce.event.model.avro.ECommerceEventAvroModel.Builder();
  }

  /**
   * Creates a new ECommerceEventAvroModel RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new ECommerceEventAvroModel RecordBuilder
   */
  public static com.muates.e.commerce.event.model.avro.ECommerceEventAvroModel.Builder newBuilder(com.muates.e.commerce.event.model.avro.ECommerceEventAvroModel.Builder other) {
    if (other == null) {
      return new com.muates.e.commerce.event.model.avro.ECommerceEventAvroModel.Builder();
    } else {
      return new com.muates.e.commerce.event.model.avro.ECommerceEventAvroModel.Builder(other);
    }
  }

  /**
   * Creates a new ECommerceEventAvroModel RecordBuilder by copying an existing ECommerceEventAvroModel instance.
   * @param other The existing instance to copy.
   * @return A new ECommerceEventAvroModel RecordBuilder
   */
  public static com.muates.e.commerce.event.model.avro.ECommerceEventAvroModel.Builder newBuilder(com.muates.e.commerce.event.model.avro.ECommerceEventAvroModel other) {
    if (other == null) {
      return new com.muates.e.commerce.event.model.avro.ECommerceEventAvroModel.Builder();
    } else {
      return new com.muates.e.commerce.event.model.avro.ECommerceEventAvroModel.Builder(other);
    }
  }

  /**
   * RecordBuilder for ECommerceEventAvroModel instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<ECommerceEventAvroModel>
    implements org.apache.avro.data.RecordBuilder<ECommerceEventAvroModel> {

    private java.lang.String eventId;
    private java.lang.String eventType;
    private long timestamp;
    private java.lang.String productId;
    private java.lang.String productName;
    private long userId;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.muates.e.commerce.event.model.avro.ECommerceEventAvroModel.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.eventId)) {
        this.eventId = data().deepCopy(fields()[0].schema(), other.eventId);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.eventType)) {
        this.eventType = data().deepCopy(fields()[1].schema(), other.eventType);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.timestamp)) {
        this.timestamp = data().deepCopy(fields()[2].schema(), other.timestamp);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.productId)) {
        this.productId = data().deepCopy(fields()[3].schema(), other.productId);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.productName)) {
        this.productName = data().deepCopy(fields()[4].schema(), other.productName);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.userId)) {
        this.userId = data().deepCopy(fields()[5].schema(), other.userId);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
    }

    /**
     * Creates a Builder by copying an existing ECommerceEventAvroModel instance
     * @param other The existing instance to copy.
     */
    private Builder(com.muates.e.commerce.event.model.avro.ECommerceEventAvroModel other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.eventId)) {
        this.eventId = data().deepCopy(fields()[0].schema(), other.eventId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.eventType)) {
        this.eventType = data().deepCopy(fields()[1].schema(), other.eventType);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.timestamp)) {
        this.timestamp = data().deepCopy(fields()[2].schema(), other.timestamp);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.productId)) {
        this.productId = data().deepCopy(fields()[3].schema(), other.productId);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.productName)) {
        this.productName = data().deepCopy(fields()[4].schema(), other.productName);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.userId)) {
        this.userId = data().deepCopy(fields()[5].schema(), other.userId);
        fieldSetFlags()[5] = true;
      }
    }

    /**
      * Gets the value of the 'eventId' field.
      * @return The value.
      */
    public java.lang.String getEventId() {
      return eventId;
    }


    /**
      * Sets the value of the 'eventId' field.
      * @param value The value of 'eventId'.
      * @return This builder.
      */
    public com.muates.e.commerce.event.model.avro.ECommerceEventAvroModel.Builder setEventId(java.lang.String value) {
      validate(fields()[0], value);
      this.eventId = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'eventId' field has been set.
      * @return True if the 'eventId' field has been set, false otherwise.
      */
    public boolean hasEventId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'eventId' field.
      * @return This builder.
      */
    public com.muates.e.commerce.event.model.avro.ECommerceEventAvroModel.Builder clearEventId() {
      eventId = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'eventType' field.
      * @return The value.
      */
    public java.lang.String getEventType() {
      return eventType;
    }


    /**
      * Sets the value of the 'eventType' field.
      * @param value The value of 'eventType'.
      * @return This builder.
      */
    public com.muates.e.commerce.event.model.avro.ECommerceEventAvroModel.Builder setEventType(java.lang.String value) {
      validate(fields()[1], value);
      this.eventType = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'eventType' field has been set.
      * @return True if the 'eventType' field has been set, false otherwise.
      */
    public boolean hasEventType() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'eventType' field.
      * @return This builder.
      */
    public com.muates.e.commerce.event.model.avro.ECommerceEventAvroModel.Builder clearEventType() {
      eventType = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'timestamp' field.
      * @return The value.
      */
    public long getTimestamp() {
      return timestamp;
    }


    /**
      * Sets the value of the 'timestamp' field.
      * @param value The value of 'timestamp'.
      * @return This builder.
      */
    public com.muates.e.commerce.event.model.avro.ECommerceEventAvroModel.Builder setTimestamp(long value) {
      validate(fields()[2], value);
      this.timestamp = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'timestamp' field has been set.
      * @return True if the 'timestamp' field has been set, false otherwise.
      */
    public boolean hasTimestamp() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'timestamp' field.
      * @return This builder.
      */
    public com.muates.e.commerce.event.model.avro.ECommerceEventAvroModel.Builder clearTimestamp() {
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'productId' field.
      * @return The value.
      */
    public java.lang.String getProductId() {
      return productId;
    }


    /**
      * Sets the value of the 'productId' field.
      * @param value The value of 'productId'.
      * @return This builder.
      */
    public com.muates.e.commerce.event.model.avro.ECommerceEventAvroModel.Builder setProductId(java.lang.String value) {
      validate(fields()[3], value);
      this.productId = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'productId' field has been set.
      * @return True if the 'productId' field has been set, false otherwise.
      */
    public boolean hasProductId() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'productId' field.
      * @return This builder.
      */
    public com.muates.e.commerce.event.model.avro.ECommerceEventAvroModel.Builder clearProductId() {
      productId = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'productName' field.
      * @return The value.
      */
    public java.lang.String getProductName() {
      return productName;
    }


    /**
      * Sets the value of the 'productName' field.
      * @param value The value of 'productName'.
      * @return This builder.
      */
    public com.muates.e.commerce.event.model.avro.ECommerceEventAvroModel.Builder setProductName(java.lang.String value) {
      validate(fields()[4], value);
      this.productName = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'productName' field has been set.
      * @return True if the 'productName' field has been set, false otherwise.
      */
    public boolean hasProductName() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'productName' field.
      * @return This builder.
      */
    public com.muates.e.commerce.event.model.avro.ECommerceEventAvroModel.Builder clearProductName() {
      productName = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'userId' field.
      * @return The value.
      */
    public long getUserId() {
      return userId;
    }


    /**
      * Sets the value of the 'userId' field.
      * @param value The value of 'userId'.
      * @return This builder.
      */
    public com.muates.e.commerce.event.model.avro.ECommerceEventAvroModel.Builder setUserId(long value) {
      validate(fields()[5], value);
      this.userId = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'userId' field has been set.
      * @return True if the 'userId' field has been set, false otherwise.
      */
    public boolean hasUserId() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'userId' field.
      * @return This builder.
      */
    public com.muates.e.commerce.event.model.avro.ECommerceEventAvroModel.Builder clearUserId() {
      fieldSetFlags()[5] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public ECommerceEventAvroModel build() {
      try {
        ECommerceEventAvroModel record = new ECommerceEventAvroModel();
        record.eventId = fieldSetFlags()[0] ? this.eventId : (java.lang.String) defaultValue(fields()[0]);
        record.eventType = fieldSetFlags()[1] ? this.eventType : (java.lang.String) defaultValue(fields()[1]);
        record.timestamp = fieldSetFlags()[2] ? this.timestamp : (java.lang.Long) defaultValue(fields()[2]);
        record.productId = fieldSetFlags()[3] ? this.productId : (java.lang.String) defaultValue(fields()[3]);
        record.productName = fieldSetFlags()[4] ? this.productName : (java.lang.String) defaultValue(fields()[4]);
        record.userId = fieldSetFlags()[5] ? this.userId : (java.lang.Long) defaultValue(fields()[5]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<ECommerceEventAvroModel>
    WRITER$ = (org.apache.avro.io.DatumWriter<ECommerceEventAvroModel>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<ECommerceEventAvroModel>
    READER$ = (org.apache.avro.io.DatumReader<ECommerceEventAvroModel>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    out.writeString(this.eventId);

    out.writeString(this.eventType);

    out.writeLong(this.timestamp);

    out.writeString(this.productId);

    out.writeString(this.productName);

    out.writeLong(this.userId);

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      this.eventId = in.readString();

      this.eventType = in.readString();

      this.timestamp = in.readLong();

      this.productId = in.readString();

      this.productName = in.readString();

      this.userId = in.readLong();

    } else {
      for (int i = 0; i < 6; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          this.eventId = in.readString();
          break;

        case 1:
          this.eventType = in.readString();
          break;

        case 2:
          this.timestamp = in.readLong();
          break;

        case 3:
          this.productId = in.readString();
          break;

        case 4:
          this.productName = in.readString();
          break;

        case 5:
          this.userId = in.readLong();
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










